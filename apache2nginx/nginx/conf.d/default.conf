
# still need to check if volumes supplied work with 
# the remote ssl credential files 


server{

  listen 443 ssl;
  listen [::]:443 ssl;
  server_name landscapedatacommons.org www.landscapedatacommons.org;
  rewrite ^ landscapedatacommons.org$request_uri? permanent;
  # listen 81; -dev
  # listen [::]:81;
  # server_name _;
  #ssl_cert dir inside docker: 
  # WORKDIR /etc
  # VOLUME /etc/apache2/ssl.crt:/etc/apache2/ssl.crt
  ssl_certificate  /etc/letsencrypt/live/landscapedatacommons.org/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/landscapedatacommons.org/privkey.pem;
  ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1;
  ssl_ciphers HIGH:!aNULL:!MD5:!AES256-GCM-SHA384:!AES256-SHA256:!AES256-SHA:!CAMELLIA256-SHA:!AES128-GCM-SHA256:!AES128-SHA256:!AES128-SHA:!CAMELLIA128-SHA;
  include /etc/letsencrypt/options-ssl-nginx.conf
  index index.html;
  location / {
  if ($http_host ~ "^www\."){
    rewrite ^(.*)$ https://mysite.org$request_uri redirect;
  }
  if ($request_uri ~ "^/ws2"){
    rewrite /(.*) /ws://localhost:5000/$1;
  }
}
  location /geoserver {
    proxy_set_header X-Forwarded-Host $host:$server_port;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://localhost:8080/geoserver
    proxy_redirect http://localhost:8080/geoserver https://landscapedatacommons.org/geoserver;
  }

  location /api {
    proxy_set_header X-Forwarded-Host $host:$server_port;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://localhost:5000/api
    proxy_redirect http://localhost:5000/api https://landscapedatacommons.org/api
  }

  location /ws2 {
    proxy_set_header X-Forwarded-Host $host:$server_port;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://127.0.0.1:5000/ws2
    proxy_redirect http://localhost:5000/api https://landscapedatacommons.org/api
  }

}